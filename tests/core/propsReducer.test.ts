import { propsReducer } from '../../packages/core/src';

test('propsReducer', () => {
  const res = propsReducer(
    {
      flex: true,
      xs__flex: true,
      sm__flex: true,
      md__flex: true,
      lg__flex: true,
      xl__flex: true,
      focus__flex: true,
      within__flex: true,
      after__flex: true,
      before__flex: true,
      active__flex: true,
      checked__flex: true,
      disabled__flex: true,
      hover__flex: true,
      visited__flex: true,
      child__flex: true,
      last__flex: true,
      first__flex: true,
      sibling__flex: true,
      odd__flex: true,
      even__flex: true,
      kf__customAnimationName: true,
      from__flex: true,
      quarter__flex: true,
      third__flex: true,
      half__flex: true,
      x2third__flex: true,
      x3quarter__flex: true,
      to__flex: true,
      focus__within__after__before__active__checked__disabled__hover__visited__child__last__first__sibling__odd__even__flex: true,
    },
    [['flex', () => 'display:flex;']],
  );
  expect(res).toStrictEqual({
    css: 'display:flex;',
    keyframe: {
      customAnimationName: {
        '0%': 'display:flex;',
        '100%': 'display:flex;',
        '25%': 'display:flex;',
        '33%': 'display:flex;',
        '50%': 'display:flex;',
        '66%': 'display:flex;',
        '75%': 'display:flex;',
      },
    },
    medias: {
      '(min-width: 1024px)': 'display:flex;',
      '(min-width: 1440px)': 'display:flex;',
      '(min-width: 1920px)': 'display:flex;',
      '(min-width: 640px)': 'display:flex;',
      '(min-width: 768px)': 'display:flex;',
    },
    pseudo: {
      '+*': 'display:flex;',
      ':active': 'display:flex;',
      ':after': 'display:flex;',
      ':before': 'display:flex;',
      ':checked': 'display:flex;',
      ':disabled': 'display:flex;',
      ':first-child': 'display:flex;',
      ':focus': 'display:flex;',
      ':focus-within': 'display:flex;',
      ':focus:focus-within:after:before:active:checked:disabled:hover:visited>*:last-child:first-child+*:nth-child(odd):nth-child(even)':
        'display:flex;',
      ':hover': 'display:flex;',
      ':last-child': 'display:flex;',
      ':nth-child(even)': 'display:flex;',
      ':nth-child(odd)': 'display:flex;',
      ':visited': 'display:flex;',
      '>*': 'display:flex;',
    },
  });
});
